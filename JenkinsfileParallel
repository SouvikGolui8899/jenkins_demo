def ip_list = params.ServerIpList.split(',').collect { it.trim() }

def parallelStagesMap = ip_list.collectEntries {
    ["${it}" : generateStage(it)]
}

def generateStage(hostIp) {
    return {
        stage("Runs on Kinetica ${hostIp}") {
            build(
                job: "${params.JenkinsJob}",
                parameters: [
                    string(name: 'hostIp', value: "${hostIp}"),
                    string(name: 'remoteGpudbHome', value: "${params.remoteGpudbHome}"),
                    string(name: 'projectDir', value: "${params.projectDir}"),
                    string(name: 'user', value: "${params.user}"),
                    string(name: 'password', value: "${params.password}"),
                    string(name: 'tuser', value: "${params.tuser}"),
                    string(name: 'tpwd', value: "${params.tpwd}"),
                    string(name: 'buildName', value: "${params.buildName}")
                ]
            )
        }
    }
}

pipeline {
    agent any

    stages {
        stage('parallel stage') {
            steps {
                script {
                    parallel parallelStagesMap
                }
            }
        }
    }
}